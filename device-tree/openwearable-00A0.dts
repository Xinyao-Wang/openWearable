/*
* Copyright (C) 2013 Matt Ranostay <mranostay@gmail.com>
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation.
*/

/*
* Modified by Jonathan Realmuto <jonreal731@gmail.com>
*/


/dts-v1/;
/plugin/;

/ {
  compatible = "ti,beaglebone", "ti,beaglebone-black";

  /* identification */
  part-number = "OPENWEARABLE";
  version = "00A0";

  /* state the resources this cape uses */
  exclusive-use =

    /**** pru debug pins ****/
    "P9.27",  /* pr1_pru0_pru_r30_5 - debug pin */
    "P8.27",  /* pr1_pru1_pru_r30_8 - debug pin */

    /**** PWM pins ****/
    "P8.19",  /* ehrpwm2A */

    /**** Motor pins ***/
    "P8.28", /* pr1_pru1_pru_r30_10 - motor dir */
    "P8.29", /* pr1_pru1_pru_r30_9 - motor enb */

    /**** ADC Mux pin ****/
    "P9.25", /* pr1_pru0_pru_r30_7 - mux sel */

    /**** Vicon Sync ****/
    "P9.24", /* pr1_pru0_pru_r31_16 - vicon sync */

    /**** ADC pins ****/
    "P9.39",  /* AIN0 */
    "P9.40",  /* AIN1 */
    "P9.37",  /* AIN2 */
    "P9.38",  /* AIN3 */
    "P9.33",  /* AIN4 */
    "P9.36",  /* AIN5 */
    "P9.35",  /* AIN6 */

    /**** SPI1 pins ****/
    "P9.28",  /* SPI1_CS0 */
    "P9.42",  /* SPI1_CS1 */
    //"P9.19", /* SPI1_CS1 */
    //"P9.20", /* SPI1_CS0 */
    "P9.29",  /* SPI1_D0 */
    "P9.30",  /* SPI1_D1 */
    "P9.31",  /* SPI1_SCLK */

    /**** I2C1 pins ****/
    "P9.17",  /* I2C1_SCL */
    "P9.18",  /* I2C1_SDA */

    /* the hardware IP uses */
    "ehrpwm2A",
    "tscadc",
    "spi1",
    "i2c1",
    "pruss";

  /*----- pin mux -----*/

  /* Bit 6 - SLEWCTRL - 0 (fast) | 1 (slow)
   * Bit 5 - RXACTIVE - 0 (reciever disable) | 1 (reciever enable)
   * Bit 4 - PULLTYPESEL - 0 (pulldown) | 1 (pullup)
   * Bit 3 - PULLUDEN - 0 (enable) | 1 (disable)
   * Bit 2-0 - MUXMODE
   */

  fragment@0 {
    target = <&am33xx_pinmux>;
    __overlay__ {

      pwm_pins: pinmux_pwm_pins {
        pinctrl-single,pins = <
          0x020 0x0C  /* P8.19 - ehrpwm2A, MODE4 */
        >;
      };

      pruss_pins: pinmux_pruss_pins {
        pinctrl-single,pins = <
          0x1A4 0x15  /* P9.27 - pr1_pru0_pru_r30_5, MODE5 | OUTPUT | PU */
          0x0E0 0x15  /* P8.27 - pr1_pru1_pru_r30_8, MODE5 | OUTPUT | PU */
          0x0E8 0x15  /* P8.28 - pr1_pru1_pru_r30_10, MODE5 | OUTPUT | PU */
          0x0E4 0x15  /* P8.29 - pr1_pru1_pru_r30_9, MODE5 | OUTPUT | PU */
          0x1AC 0x15  /* P9.25 - pr1_pru0_pru_r30_7, MODE5 | OUTPUT | PU */
          0x184 0x26  /* P9.24 - pr1_pru0_pru_r31_16, MODE6 | INPUT | PD */
        >;
      };

      spi_pins: pinmux_spi_pins {
        pinctrl-single,pins = <
          0x19C 0x13  /* P9.28 - spi1_cs0,  MODE3 | OUTPUT_PULLUP */
          0x164 0x12  /* P9.42 - spi1_cs1, MODE2 | OUTPUT_PULLUP */
          0x1A0 0x06  /* P9.42 alternate mux -- set as input */
          0x194 0x33  /* P9.29 - spi1_d0, MODE3 | INPUT_PULLUP */
          0x198 0x13  /* P9.30 - spi1_d1, MODE3 | OUTPUT_PULLUP */
          0x190 0x33  /* P9.31 - spi1_sclk, MODE3 | INPUT_PULLUP */
        >;
      };

      i2c1_pins: pinmux_i2c1_pins{
        pinctrl-single,pins = <
          0x15C 0x72  /* P9.17 - i2c1_scl, MODE2 | INPUT_PULLUP (bi-dir)*/
          0x158 0x72  /* P9.18 - i2c1_sda, MODE2 | INPUT_PULLUP (bi-dir)*/
        >;
      };
    };
  };

  /*----- pru enable -----*/

  fragment@1 {
    target = <&pruss>;
    __overlay__ {
      status = "okay";
      pinctrl-names = "default";
      pinctrl-0 = <&pruss_pins>;
    };
  };

  /*------ PWM enable ------*/

  fragment@2 {
    target = <&epwmss2>;
    __overlay__ {
      status = "okay";
    };
  };

  fragment@3 {
    target = <&ehrpwm2>;
    __overlay__ {
      status = "okay";
      pinctrl-names = "default";
      pinctrl-0 = <&pwm_pins>;
    };
  };

  /*------ PWM settings ------*/

  fragment@4 {
    target = <&ocp>;
    __overlay__ {

      #address-cells = <1>;
      #size-cells = <1>;

      openwearable {
        compatible = "openwearable";
        status = "okay";

        pinctrl-names = "default";
        pinctrl-0 = <&pwm_pins>;

        pwms = <&ehrpwm2 0 500000 0>;
        pwm-names = "openwearable";

        pwm-frequency = <9250>;
        pwm-duty-cycle = <50>;

        default-brightness = <35>;

      };
    };
  };

  /*------ SPI settings -----*/

  fragment@5 {
    target = <&spi1>;
    __overlay__ {

      #address-cells = <1>;
      #size-cells = <0>;
      status = "okay";
      pinctrl-names = "default";
      pinctrl-0 = <&spi_pins>;

      spidev@1 {
        spi-max-frequency = <24000000>;
        reg = <0>;
        compatible = "linux,spidev,openwearable";
      };
    };
  };


  /*----- I2C1 ------*/


  fragment@6 {
    target = <&i2c1>;
    __overlay__ {
      #address-cells = <1>;
      #size-cells = <1>;
      status = "okay";
      pinctrl-names = "default";
      pinctrl-0 = <&i2c1_pins>;
    };
 };


  /*------ ADC settings ------*/

  fragment@7 {
    target = <&ocp>;
    __overlay__ {

      #address-cells = <1>;
      #size-cells = <1>;

      tscadc {
        compatible = "ti,ti-tscadc";
        reg = <0x44e0d000 0x1000>;
        interrupt-parent = <&intc>;
        interrupts = <16>;
        ti,hwmods = "adc_tsc";
        status = "okay";
        linux,phandle = <0x3d>;
        phandle = <0x3d>;

        adc {
          ti,adc-channels = <0 1 2 3 4 5 6 7>;
        };
      };
    };
  };
};
